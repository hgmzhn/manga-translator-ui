from PIL import Image
import requests
from io import BytesIO

def reassemble_image(url, tile_data, output_path="reassembled_image.png"):
    """
    Reassemble image from tile data
    
    Args:
        url: Image URL to download
        tile_data: List of tile coordinates in format [src_x, src_y, width, height, dest_x, dest_y, width, height]
        output_path: Output file path
    """
    # Download the image
    response = requests.get(url)
    img = Image.open(BytesIO(response.content))
    
    # Create blank canvas
    width = tile_data["width"]
    height = tile_data["height"]
    reassembled = Image.new("RGB", (width, height))
    
    # Process each tile
    for tile in tile_data["args"]:
        src_x, src_y, src_w, src_h, dest_x, dest_y, dest_w, dest_h = tile
        
        # Crop the tile from source
        tile_img = img.crop((src_x, src_y, src_x + src_w, src_y + src_h))
        
        # Resize if needed (though dimensions should match)
        if src_w != dest_w or src_h != dest_h:
            tile_img = tile_img.resize((dest_w, dest_h))
        
        # Paste to destination
        reassembled.paste(tile_img, (dest_x, dest_y))
    
    # Save result
    reassembled.save(output_path)
    print(f"Image reassembled and saved to {output_path}")
    return reassembled

# Example usage
data = {
    "url": "https://play.dl.dlsite.com/content/work/doujin/RJ01365000/RJ01364950/optimized/1689247845bbf81edfdfefdf0eb09a51.jpg?v=01963779-6330-76aa-9498-5fa1de56b2df",
    "args": [[0,0,128,128,256,1152,128,128],[128,0,128,128,640,512,128,128],[256,0,128,128,384,896,128,128],[384,0,128,128,384,768,128,128],[512,0,128,128,128,640,128,128],[640,0,128,128,256,512,128,128],[768,0,9,128,896,1152,9,128],[896,0,128,128,384,512,128,128],[0,128,128,128,512,896,128,128],[128,128,128,128,0,512,128,128],[256,128,9,128,896,0,9,128],[384,128,128,128,768,128,128,128],[512,128,9,128,896,1024,9,128],[640,128,128,128,384,1152,128,128],[768,128,128,128,512,640,128,128],[896,128,128,128,256,256,128,128],[0,256,128,128,384,384,128,128],[128,256,128,128,768,512,128,128],[256,256,128,128,0,1152,128,128],[384,256,128,128,640,768,128,128],[512,256,9,128,896,896,9,128],[640,256,128,128,384,128,128,128],[768,256,128,128,512,1152,128,128],[896,256,128,128,128,896,128,128],[0,384,128,128,256,896,128,128],[128,384,128,128,384,640,128,128],[256,384,128,128,128,768,128,128],[384,384,128,128,640,1024,128,128],[512,384,128,128,384,256,128,128],[640,384,128,128,384,1024,128,128],[768,384,128,128,0,896,128,128],[896,384,9,128,896极速,9,128],[0,512,128,128,256,640,128,128],[128,512,128,128,512,384,128,128],[256,512极速,128,128,256,384,128,128],[384,512,9,128,896,384,9,128],[512,512,128,128,640,1152,128,128],[640,512,128,128,384,0,128,128],[768,512,128,128,128,512,128,128],[896,512,128,128,0,384,128,128],[0,640,128,128,768,256,128,128],[128,640,128,128,0,1024,128,128],[256,640,128,128,0,640,128,128],[384,640,128,128,768,640,128,128],[512,640,128,128,极速,1152,128,128],[640,640,极速,128,256,1024,128,128],[768,640,128,128,128,128,128,128],[896,640,128,128,512,256,128,128],[0,768,128,128,768,384,128,128],[128,768,128,128,512,128,128,128],[256,768,9,128,896,256,9,128],[384,768,128,128,512,512,128,128],[512,768,128,128,128,256,128,128],[640,768,128,128,640,256,128,128],[768,768,128,128,512,0,128,128],[896,768,128,128,512,1024,128,128],[0,896,9,128,896,512,9,128],[128,896,128,128,128,0,128,128],[256,896,128,128,0,128,128,128],[384,896,128,128,640,384,128,128],[512,896,128,128,768,896,128,128],[640,896,128,128,640,896,128,128],[768,896,128,128,640,128,128,128],[896,896,9,128,896,768,9,128],[0,1024,128,128,128,1024极速,128,128],[128,1024,128,128,256,128,128,128],[256,1024,128,128,128,1152,128,128],[384,1024,128,128,768,0,128,128],[512,1024,128,128,640,640,128,128],[640,1024,128,128,0,256,128,128],[768,1024,128,128,128,384,128,128],[896,1024,128,128,512,768,128,128],[0,1152,128,128,0,0,128,128],[128,1152,128,128,768,768,128,128],[256,1152,128,128,256,768,128,128],[384,1152,128,128,640,0,128,128],[512,1152,128,128,256,0,128,128],[640,1152,9,128,896,128,9,128],[768,1152,128,128,0,768,128,128],[896,1152,128,128,768,1024,128,128]],
    "width": 905,
    "height": 1280
}

if __name__ == "__main__":
    reassemble_image(data["url"], data, "reassembled_output.png")